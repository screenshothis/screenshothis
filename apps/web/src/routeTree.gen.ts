/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MarketingRouteImport } from './routes/_marketing'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as MarketingIndexRouteImport } from './routes/_marketing/index'
import { Route as MarketingConfirmationRouteImport } from './routes/_marketing/confirmation'
import { Route as AuthResetPasswordRouteImport } from './routes/_auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as AppScreenshotsRouteImport } from './routes/_app/screenshots'
import { Route as AppPlaygroundRouteImport } from './routes/_app/playground'
import { Route as AppKeysRouteImport } from './routes/_app/keys'
import { Route as AppDashboardRouteImport } from './routes/_app/dashboard'
import { Route as MarketingLegalSplatRouteImport } from './routes/_marketing/legal.$'

// Create/Update Routes

const MarketingRoute = MarketingRouteImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const MarketingIndexRoute = MarketingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)

const MarketingConfirmationRoute = MarketingConfirmationRouteImport.update({
  id: '/confirmation',
  path: '/confirmation',
  getParentRoute: () => MarketingRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AppScreenshotsRoute = AppScreenshotsRouteImport.update({
  id: '/screenshots',
  path: '/screenshots',
  getParentRoute: () => AppRoute,
} as any)

const AppPlaygroundRoute = AppPlaygroundRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => AppRoute,
} as any)

const AppKeysRoute = AppKeysRouteImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

const MarketingLegalSplatRoute = MarketingLegalSplatRouteImport.update({
  id: '/legal/$',
  path: '/legal/$',
  getParentRoute: () => MarketingRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/keys': {
      id: '/_app/keys'
      path: '/keys'
      fullPath: '/keys'
      preLoaderRoute: typeof AppKeysRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/playground': {
      id: '/_app/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof AppPlaygroundRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/screenshots': {
      id: '/_app/screenshots'
      path: '/screenshots'
      fullPath: '/screenshots'
      preLoaderRoute: typeof AppScreenshotsRouteImport
      parentRoute: typeof AppRouteImport
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_marketing/confirmation': {
      id: '/_marketing/confirmation'
      path: '/confirmation'
      fullPath: '/confirmation'
      preLoaderRoute: typeof MarketingConfirmationRouteImport
      parentRoute: typeof MarketingRouteImport
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexRouteImport
      parentRoute: typeof MarketingRouteImport
    }
    '/_marketing/legal/$': {
      id: '/_marketing/legal/$'
      path: '/legal/$'
      fullPath: '/legal/$'
      preLoaderRoute: typeof MarketingLegalSplatRouteImport
      parentRoute: typeof MarketingRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/_app' {
  const createFileRoute: CreateFileRoute<
    '/_app',
    FileRoutesByPath['/_app']['parentRoute'],
    FileRoutesByPath['/_app']['id'],
    FileRoutesByPath['/_app']['path'],
    FileRoutesByPath['/_app']['fullPath']
  >
}
declare module './routes/_auth' {
  const createFileRoute: CreateFileRoute<
    '/_auth',
    FileRoutesByPath['/_auth']['parentRoute'],
    FileRoutesByPath['/_auth']['id'],
    FileRoutesByPath['/_auth']['path'],
    FileRoutesByPath['/_auth']['fullPath']
  >
}
declare module './routes/_marketing' {
  const createFileRoute: CreateFileRoute<
    '/_marketing',
    FileRoutesByPath['/_marketing']['parentRoute'],
    FileRoutesByPath['/_marketing']['id'],
    FileRoutesByPath['/_marketing']['path'],
    FileRoutesByPath['/_marketing']['fullPath']
  >
}
declare module './routes/_app/dashboard' {
  const createFileRoute: CreateFileRoute<
    '/_app/dashboard',
    FileRoutesByPath['/_app/dashboard']['parentRoute'],
    FileRoutesByPath['/_app/dashboard']['id'],
    FileRoutesByPath['/_app/dashboard']['path'],
    FileRoutesByPath['/_app/dashboard']['fullPath']
  >
}
declare module './routes/_app/keys' {
  const createFileRoute: CreateFileRoute<
    '/_app/keys',
    FileRoutesByPath['/_app/keys']['parentRoute'],
    FileRoutesByPath['/_app/keys']['id'],
    FileRoutesByPath['/_app/keys']['path'],
    FileRoutesByPath['/_app/keys']['fullPath']
  >
}
declare module './routes/_app/playground' {
  const createFileRoute: CreateFileRoute<
    '/_app/playground',
    FileRoutesByPath['/_app/playground']['parentRoute'],
    FileRoutesByPath['/_app/playground']['id'],
    FileRoutesByPath['/_app/playground']['path'],
    FileRoutesByPath['/_app/playground']['fullPath']
  >
}
declare module './routes/_app/screenshots' {
  const createFileRoute: CreateFileRoute<
    '/_app/screenshots',
    FileRoutesByPath['/_app/screenshots']['parentRoute'],
    FileRoutesByPath['/_app/screenshots']['id'],
    FileRoutesByPath['/_app/screenshots']['path'],
    FileRoutesByPath['/_app/screenshots']['fullPath']
  >
}
declare module './routes/_auth/forgot-password' {
  const createFileRoute: CreateFileRoute<
    '/_auth/forgot-password',
    FileRoutesByPath['/_auth/forgot-password']['parentRoute'],
    FileRoutesByPath['/_auth/forgot-password']['id'],
    FileRoutesByPath['/_auth/forgot-password']['path'],
    FileRoutesByPath['/_auth/forgot-password']['fullPath']
  >
}
declare module './routes/_auth/login' {
  const createFileRoute: CreateFileRoute<
    '/_auth/login',
    FileRoutesByPath['/_auth/login']['parentRoute'],
    FileRoutesByPath['/_auth/login']['id'],
    FileRoutesByPath['/_auth/login']['path'],
    FileRoutesByPath['/_auth/login']['fullPath']
  >
}
declare module './routes/_auth/register' {
  const createFileRoute: CreateFileRoute<
    '/_auth/register',
    FileRoutesByPath['/_auth/register']['parentRoute'],
    FileRoutesByPath['/_auth/register']['id'],
    FileRoutesByPath['/_auth/register']['path'],
    FileRoutesByPath['/_auth/register']['fullPath']
  >
}
declare module './routes/_auth/reset-password' {
  const createFileRoute: CreateFileRoute<
    '/_auth/reset-password',
    FileRoutesByPath['/_auth/reset-password']['parentRoute'],
    FileRoutesByPath['/_auth/reset-password']['id'],
    FileRoutesByPath['/_auth/reset-password']['path'],
    FileRoutesByPath['/_auth/reset-password']['fullPath']
  >
}
declare module './routes/_marketing/confirmation' {
  const createFileRoute: CreateFileRoute<
    '/_marketing/confirmation',
    FileRoutesByPath['/_marketing/confirmation']['parentRoute'],
    FileRoutesByPath['/_marketing/confirmation']['id'],
    FileRoutesByPath['/_marketing/confirmation']['path'],
    FileRoutesByPath['/_marketing/confirmation']['fullPath']
  >
}
declare module './routes/_marketing/index' {
  const createFileRoute: CreateFileRoute<
    '/_marketing/',
    FileRoutesByPath['/_marketing/']['parentRoute'],
    FileRoutesByPath['/_marketing/']['id'],
    FileRoutesByPath['/_marketing/']['path'],
    FileRoutesByPath['/_marketing/']['fullPath']
  >
}
declare module './routes/_marketing/legal.$' {
  const createFileRoute: CreateFileRoute<
    '/_marketing/legal/$',
    FileRoutesByPath['/_marketing/legal/$']['parentRoute'],
    FileRoutesByPath['/_marketing/legal/$']['id'],
    FileRoutesByPath['/_marketing/legal/$']['path'],
    FileRoutesByPath['/_marketing/legal/$']['fullPath']
  >
}

// Create and export the route tree

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppKeysRoute: typeof AppKeysRoute
  AppPlaygroundRoute: typeof AppPlaygroundRoute
  AppScreenshotsRoute: typeof AppScreenshotsRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppKeysRoute: AppKeysRoute,
  AppPlaygroundRoute: AppPlaygroundRoute,
  AppScreenshotsRoute: AppScreenshotsRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MarketingRouteChildren {
  MarketingConfirmationRoute: typeof MarketingConfirmationRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
  MarketingLegalSplatRoute: typeof MarketingLegalSplatRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingConfirmationRoute: MarketingConfirmationRoute,
  MarketingIndexRoute: MarketingIndexRoute,
  MarketingLegalSplatRoute: MarketingLegalSplatRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MarketingRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/keys': typeof AppKeysRoute
  '/playground': typeof AppPlaygroundRoute
  '/screenshots': typeof AppScreenshotsRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/confirmation': typeof MarketingConfirmationRoute
  '/': typeof MarketingIndexRoute
  '/legal/$': typeof MarketingLegalSplatRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/keys': typeof AppKeysRoute
  '/playground': typeof AppPlaygroundRoute
  '/screenshots': typeof AppScreenshotsRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/confirmation': typeof MarketingConfirmationRoute
  '/': typeof MarketingIndexRoute
  '/legal/$': typeof MarketingLegalSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_marketing': typeof MarketingRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/keys': typeof AppKeysRoute
  '/_app/playground': typeof AppPlaygroundRoute
  '/_app/screenshots': typeof AppScreenshotsRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_marketing/confirmation': typeof MarketingConfirmationRoute
  '/_marketing/': typeof MarketingIndexRoute
  '/_marketing/legal/$': typeof MarketingLegalSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/keys'
    | '/playground'
    | '/screenshots'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/confirmation'
    | '/'
    | '/legal/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/dashboard'
    | '/keys'
    | '/playground'
    | '/screenshots'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/confirmation'
    | '/'
    | '/legal/$'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_marketing'
    | '/_app/dashboard'
    | '/_app/keys'
    | '/_app/playground'
    | '/_app/screenshots'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/_auth/reset-password'
    | '/_marketing/confirmation'
    | '/_marketing/'
    | '/_marketing/legal/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  MarketingRoute: typeof MarketingRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  MarketingRoute: MarketingRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth",
        "/_marketing"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/keys",
        "/_app/playground",
        "/_app/screenshots"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/register",
        "/_auth/reset-password"
      ]
    },
    "/_marketing": {
      "filePath": "_marketing.tsx",
      "children": [
        "/_marketing/confirmation",
        "/_marketing/",
        "/_marketing/legal/$"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_app/keys": {
      "filePath": "_app/keys.tsx",
      "parent": "/_app"
    },
    "/_app/playground": {
      "filePath": "_app/playground.tsx",
      "parent": "/_app"
    },
    "/_app/screenshots": {
      "filePath": "_app/screenshots.tsx",
      "parent": "/_app"
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_marketing/confirmation": {
      "filePath": "_marketing/confirmation.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/": {
      "filePath": "_marketing/index.tsx",
      "parent": "/_marketing"
    },
    "/_marketing/legal/$": {
      "filePath": "_marketing/legal.$.tsx",
      "parent": "/_marketing"
    }
  }
}
ROUTE_MANIFEST_END */
