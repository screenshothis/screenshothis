/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AppPlaygroundImport } from './routes/_app/playground'
import { Route as AppDashboardImport } from './routes/_app/dashboard'
import { Route as AuthRegisterSplatImport } from './routes/_auth/register.$'
import { Route as AuthLoginSplatImport } from './routes/_auth/login.$'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppPlaygroundRoute = AppPlaygroundImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => AppRoute,
} as any)

const AppDashboardRoute = AppDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any)

const AuthRegisterSplatRoute = AuthRegisterSplatImport.update({
  id: '/register/$',
  path: '/register/$',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginSplatRoute = AuthLoginSplatImport.update({
  id: '/login/$',
  path: '/login/$',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardImport
      parentRoute: typeof AppImport
    }
    '/_app/playground': {
      id: '/_app/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof AppPlaygroundImport
      parentRoute: typeof AppImport
    }
    '/_auth/login/$': {
      id: '/_auth/login/$'
      path: '/login/$'
      fullPath: '/login/$'
      preLoaderRoute: typeof AuthLoginSplatImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register/$': {
      id: '/_auth/register/$'
      path: '/register/$'
      fullPath: '/register/$'
      preLoaderRoute: typeof AuthRegisterSplatImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppDashboardRoute: typeof AppDashboardRoute
  AppPlaygroundRoute: typeof AppPlaygroundRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRoute: AppDashboardRoute,
  AppPlaygroundRoute: AppPlaygroundRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginSplatRoute: typeof AuthLoginSplatRoute
  AuthRegisterSplatRoute: typeof AuthRegisterSplatRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginSplatRoute: AuthLoginSplatRoute,
  AuthRegisterSplatRoute: AuthRegisterSplatRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/playground': typeof AppPlaygroundRoute
  '/login/$': typeof AuthLoginSplatRoute
  '/register/$': typeof AuthRegisterSplatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AppDashboardRoute
  '/playground': typeof AppPlaygroundRoute
  '/login/$': typeof AuthLoginSplatRoute
  '/register/$': typeof AuthRegisterSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/dashboard': typeof AppDashboardRoute
  '/_app/playground': typeof AppPlaygroundRoute
  '/_auth/login/$': typeof AuthLoginSplatRoute
  '/_auth/register/$': typeof AuthRegisterSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/playground'
    | '/login/$'
    | '/register/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/dashboard' | '/playground' | '/login/$' | '/register/$'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/dashboard'
    | '/_app/playground'
    | '/_auth/login/$'
    | '/_auth/register/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/playground"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login/$",
        "/_auth/register/$"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_app/playground": {
      "filePath": "_app/playground.tsx",
      "parent": "/_app"
    },
    "/_auth/login/$": {
      "filePath": "_auth/login.$.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/$": {
      "filePath": "_auth/register.$.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
